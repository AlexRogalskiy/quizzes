package com.thiagoh.gdotcom;

import org.testng.Assert;
import org.testng.annotations.Test;

@Test
public class RaposasEGalinhasTest {

	@Test
	public void testSolve1() {

		//@formatter:off
			String[] problem = {	
					".####.#####..",
					"#..kk#...#v#.",
					"#...k#.#.#.#.",
					"#...##k#...#.",
					"#..#v#k###.#.",
					"#...#v#....#.",
					"#....v#v####.",
					".#####.#vv.k#",
					".#......#####",};
		//@formatter:on

		Assert.assertEquals("3 5", new RaposasEGalinhas().solve(problem));
	}

	@Test
	public void testSolve2() {

		//@formatter:off
		
		String[] problem = {
				".####.###################..",
				"#..kk#......#...v..##..#v#.",
				"#...k#.###..#.####..##.#.#.",
				"#...##k###....#vk#..##...#.",
				"#..#v#k###....#####.####.#.",
				"#...#v####..v..#v...#....#.",
				"#....v####....k.....#v####.",
				".#####.###..#......###vv.k#",
				".#.....##############.#####",};
		//@formatter:on

		Assert.assertEquals("3 9", new RaposasEGalinhas().solve(problem));
	}

	@Test
	public void testSolve3() {

		//@formatter:off
		
		String[] problem = {
				"...#..",
				".##v#.",
				"#v.#.#",
				"#.k#.#",
				".###.#",
				"...###",};
		//@formatter:on

		Assert.assertEquals("0 2", new RaposasEGalinhas().solve(problem));
	}

	@Test
	public void testSolve4() {

		//@formatter:off
		
		String[] problem = {
				".######.",
				"#..k...#",
				"#.####.#",
				"#.#v.#.#",
				"#.#.k#k#",
				"#k.##..#",
				"#.v..v.#",
				".######.",};
		//@formatter:on

		Assert.assertEquals("3 1", new RaposasEGalinhas().solve(problem));
	}

	@Test
	public void testSolve5() {

		//@formatter:off
		
		String[] problem = {
				".####.##################################################################################..",
				"#....#......#..################.......#############....#######################....##..#.#.",
				"#....#.###..#.#################.#####.#####......#..#...........#################..##.#.#.",
				"#...##.###....#################.#...#.#####......#kk#...........##############..#..##...#.",
				"#..#.#.###....#################.#.#v#.#####......#..#...........##################.####.#.",
				"#...#.####.....################.#..##.#####......#..#...........###############....#....#.",
				"#.....####.....################.##....#####......#..#...........##############.....#.####.",
				".#####.###..#..################...#########################.#########################....#",
				"########################.....v....................................................########",
				".#.....#############################################################################.#####",};
		//@formatter:on

		Assert.assertEquals("0 2", new RaposasEGalinhas().solve(problem));
	}


	@Test
	public void testSolve6() {

		//@formatter:off
		
		String[] problem = {
				".####.##################################################################################..",
				"#....#......#..################.......#############....#######################....##..#.#.",
				"#....#.###..#.#################.#####.#####......#..#...........#################..##.#.#.",
				"#...##.###....#################.#...#.#####......#kk#...........##############..#..##...#.",
				"#..#.#.###....#################.#.#v#.#####......#..#...........##################.####.#.",
				"#...#.####.....################.#..##.#####......#..#...........###############....#....#.",
				"#.....####.....################.##....#####......#..#...........##############.....#.####.",
				".#####.###..#..################...#########################.#########################....#",
				"########################.....v....................................................########",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#k.#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#k.#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#k.#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..k#.#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#.k#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#..#..#############################################################################.#####",
				".#vv#vv###################################################################################",
				".#.....#############################################################################.#####",
				".#.....#############################################################################.#####",
				".#..v..#############################################################################.#####",
				".#.....#############################################################################.#####",
				".#.....#############################################################################.#####",
				".#.....#############################################################################.#####",
				".#.....#############################################################################.#####",
				".###################################################################################.#####",};
		//@formatter:on

		Assert.assertEquals("0 7", new RaposasEGalinhas().solve(problem));
	}

}
